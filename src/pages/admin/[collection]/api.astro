---
import Layout from "../../../layouts/Layout.astro";
import Aside from "../../../components/Aside.astro";
import Header from "../../../components/Header.astro";
import { Collections, getCollection } from "../../../../lexgi.mjs";
import { API_URL } from "../../../consts.mjs";
import JsonTree from "../../../components/JsonTree/JsonTree.astro";
import CopyClipboard from "../../../components/CopyClipboardUrl.astro";

const identityCookieValue = Astro.cookies.get("identity")?.value;

let identity = null;
let token: string | null = null;

try {
  if (identityCookieValue) {
    identity = JSON.parse(identityCookieValue);
    token = identity.token;
  }
} catch (error) {
  console.error("Error al analizar el valor de la cookie:", error);
  // Puedes tomar acciones adicionales aquí, según tus necesidades.
}

const title = "Flexi CMS";
const { collection: collectionSlug } = Astro.params;
const collections:any = Collections;

const collection = getCollection(collectionSlug)

let documents:any = [];
let collectionFields: any;

if(collection){
  collectionFields = collections[collection]?.fields;
}

async function getDocuments(){
  const response = await fetch(API_URL + collectionSlug, {
      method: "GET",
      headers: {
        Authorization: "Bearer " + token,
      },
  });
  
  return await response?.json();
  
}

let accessDenied = false;
if(collection === 'settings'){

}else {
  documents = await getDocuments();
  if(documents?.message === 'Access denied'){
    // return Astro.redirect('/')
    accessDenied = true;
  }
}
---

<Layout title={collectionSlug}>
  <div class="layout aside-opened">
    <button class="toggle-aside-button" data-toggle-nav id="toggle-nav">
      <svg
        class="icon-open-menu"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <line x1="3" y1="12" x2="21" y2="12"></line>
        <line x1="3" y1="6" x2="21" y2="6"></line>
        <line x1="3" y1="18" x2="21" y2="18"></line>
      </svg>
    </button>
    <Aside />
    <div class="layout-content">
      <Header collection={collection} breadcumbAction="Update" />
      <main class="main padding-0">
        <div
          class="create-document flex-auto flex flex-col"
        >
          <header
            class="page-header sticky top-0 z-30 py-6 block sm:flex items-center justify-between"
          >
            <div
              class="flexee-container w-full flex justify-between items-center"
            >
              <div class="flex gap-4">
                <h1
                  class="text-xl font-semibold text-zinc-900 sm:text-2xl dark:text-white"
                >
                  {collection?.labels?.plural['es'] || collection.name}
                </h1>

                <a
                  href={`/admin/${collectionSlug}/create`}
                  type="button"
                  class="inline-flex items-center justify-center w-1/2 px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-primary-700 hover:bg-primary-800 sm:w-auto dark:bg-primary-600 dark:hover:bg-primary-700"
                >
                  <svg
                  class="w-5 h-5 mr-2 -ml-1"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"
                      clip-rule="evenodd">
                    </path>
                  </svg>
                  Añadir
                </a>

                <div
                  class="api-url-panel"
                >
                  <CopyClipboard url={`${API_URL}${collectionSlug}`}></CopyClipboard>
                  <div
                    style="
                          font-size: 0.95em;
                          display: flex;
                          align-items: center;
                          gap: 15px;
                      "
                  >
                    <div class="flex">
                      <label
                        class="relative inline-flex items-center cursor-pointer"
                      >
                        <input
                          type="checkbox"
                          checked=""
                          class="simple-checkbox"
                        />
                        <span
                          class="ms-3 text-sm font-medium text-zinc-900 dark:text-zinc-300"
                          >Authentication</span
                        >
                      </label>
                    </div>
                  </div>
                </div>
              </div>

              <div class="flex gap-4 items-center">
                <div class="flex mr-4">
                  <a href={`/admin/${collectionSlug}`}
                    class="relative inline-flex items-center cursor-pointer"
                  >
                    <input type="checkbox" checked class="sr-only peer" />
                    <span 
                      class="w-11 h-6 bg-zinc-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-violet-300 dark:peer-focus:ring-violet-800 rounded-full peer dark:bg-zinc-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-zinc-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-zinc-600 peer-checked:bg-violet-600"
                    >
                    </span>
                    <span
                      class="ms-3 text-sm font-medium text-zinc-900 dark:text-zinc-300"
                      >Ver API Rest</span
                    >
                  </a>
                </div>
              </div>
            </div>
          </header>

          <div
            class={"flexee-container flex-auto document-form"}
          >
            <div class="document-form__main flex flex-col gap-6">
              <JsonTree customClass={"no-padding-tree"} jsonData={documents} />
            </div>
          </div>
        </div>
      </main>
    </div>
  </div>
</Layout>

<script>
  const toggleNavBtn = document.querySelector("[data-toggle-nav]");
  const layout = document.querySelector(".layout");
  const aside = document.querySelector(".aside");

  // Add event listeners to fire confetti when a button is clicked.

  toggleNavBtn?.addEventListener("click", () => {
    if (layout?.classList.contains("aside-opened")) {
      layout?.classList.remove("aside-opened");
      aside?.classList.remove("aside-opened");
    } else {
      layout?.classList.add("aside-opened");
      aside?.classList.add("aside-opened");
    }
  });
</script>

<style>
  h1 {
    margin: 0;
  }

  .page-header {
    min-height: 90px;
    border-bottom: 1px solid rgb(255 255 255 / 5%);
    background-color: var(--site-bg);
  }

  .document-form {
    display: grid;
    grid-template-columns: 1fr;
  }

  .document-form__main {
    flex: auto;
    padding: 3rem 0;
  }

  .api-url-panel {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 2rem;
    background: #090909c2;
    position: sticky;
    top: 90px;
    backdrop-filter: blur(20px);
    z-index: 9;
    gap: 2rem;
  }
  .simple-checkbox {
    width: 22px;
    height: 21px;
    color: #7c3aed;
    border-radius: 4px;
    border-color: transparent;
    box-shadow: none;
  }
</style>

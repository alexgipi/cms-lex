---
import Layout from "../../../layouts/Layout.astro";
import Aside from "../../../components/Aside.astro";
import Header from "../../../components/Header.astro";
import TableList from "../../../components/TableList.svelte"
import { Collections } from "../../../../lexgi.mjs";
import { capitalizeFirstLetter } from "../../../../utils.js"
import { API_URL } from "../../../consts.mjs";

const identityCookieValue = Astro.cookies.get("identity")?.value;

let identity = null;
let token: string | null = null;

try {
  if (identityCookieValue) {
    identity = JSON.parse(identityCookieValue);
    token = identity.token;
  }
} catch (error) {
  console.error("Error al analizar el valor de la cookie:", error);
  // Puedes tomar acciones adicionales aquí, según tus necesidades.
}

const title = "Lexgi CMS";
const { collection } = Astro.params;
const collections:any = Collections;

const collectionName = capitalizeFirstLetter(collection?.replaceAll('-', ' ')) || null;

let documents = [];
let collectionFields: any;

if(collection){
  collectionFields = collections[collection]?.fields;
}


async function getDocuments(){
  const response = await fetch(API_URL + collection, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Authorization: "Bearer " + token,
      },
  });
  
  return await response?.json();
  
}

let accessDenied = false;
if(collection === 'settings'){

}else {
  documents = await getDocuments();
  if(documents?.message === 'Access denied'){
    // return Astro.redirect('/')
    accessDenied = true;
  }
}
---


<Layout title={collectionName}>
    <div class="layout aside-opened">
      <button class="toggle-aside-button" data-toggle-nav id="toggle-nav">
        <svg
          class="icon-open-menu"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <line x1="3" y1="12" x2="21" y2="12"></line>
          <line x1="3" y1="6" x2="21" y2="6"></line>
          <line x1="3" y1="18" x2="21" y2="18"></line>
        </svg>
      </button>
      <Aside />

      <div class="layout-content">
        
        <Header collection={collections[collection || '']} breadcumbAction="List" />
        
        <main class="main">
          <div class="w-full flex-auto flex flex-col">
            <section class="collection-list flex-auto flex flex-col">

              {accessDenied ?            
                <div class="container">
                  <div class="access-denied-alert mt-10">
                    <p>No tienes acceso a esta página</p>
                  </div>                  
                </div>
                :
                <TableList client:only identity={identity} collectionFields={collectionFields} collectionName={collectionName} collection={collection} documents={documents}></TableList>
              }

            </section>   
          </div>
        </main>
        
        
      </div>
    </div>
</Layout>



<script>
  const toggleNavBtn = document.querySelector("[data-toggle-nav]");
  const layout = document.querySelector(".layout");
  const aside = document.querySelector(".aside");

  // Add event listeners to fire confetti when a button is clicked.

  toggleNavBtn?.addEventListener("click", () => {
    if (layout?.classList.contains("aside-opened")) {
      layout?.classList.remove("aside-opened");
      aside?.classList.remove("aside-opened");
    } else {
      layout?.classList.add("aside-opened");
      aside?.classList.add("aside-opened");
    }
  });
</script>

<style>
  h1 {
    margin: 0;
  }

  .access-denied-alert {
    padding: 2rem;
    background: #111;
    border-radius: 3px;
    color: #888;
  }
</style>
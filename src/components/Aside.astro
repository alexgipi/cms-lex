---
import { Collections, Settings } from "../../lexgi.mjs";
import { API_URL } from "../../consts";

const identityCookieValue = Astro.cookies.get("identity")?.value;
let identity:any = null;
let token: string | null = null;

try {
  if (identityCookieValue) {
    identity = JSON.parse(identityCookieValue);
    token = identity.token;
  }
} catch (error) {
  console.error("Error al analizar el valor de la cookie:", error);
  // Puedes tomar acciones adicionales aquí, según tus necesidades.
}

const UPLOADS_URL = "http://localhost:3500/uploads/"

const title = "Lexgi CMS";
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);
const settings:any = Settings;

const lexiSettings = await getCollectionDoc();

const sitelogo = lexiSettings?.sitelogo;

let siteLogoSrc = '/lexi-cms-logo.png';

if(sitelogo?.file){
  siteLogoSrc = UPLOADS_URL + sitelogo.file
}

async function getCollectionDoc(){
  try {
    const res = await fetch(API_URL + 'settings/lexi-settings', 
      {
          method: "GET",
          headers: {
            Authorization: "Bearer " + token,
          }
      }
    );

    const data = await res.json();

    return data;

  } catch (error) {
    console.error(error);
  }
}
---

<aside class="aside aside-opened">
  <header class="aside-header">
    <div class="aside-header-content">
      <img class="site-logo" alt={"Logo de " + lexiSettings?.sitename} src={siteLogoSrc} data-astro-source-loc="99:12">
    </div>
  </header>

  <nav class="nav">
    <div class="nav-block">
      <div class="nav-block-items">
        <a
          class={currentPath === "admin"
            ? "active nav-block-item"
            : "nav-block-item"}
          href={"/"}
        >
          Dashboard
        </a>
        <div
          class={currentPath === `admin/settings` ? "active nav-block-item" : "nav-block-item"}
          aria-controls="dropdown-example" data-collapse-toggle="dropdown-example"
        >
          Settings
          <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"></path>
          </svg>
        </div>

        <ul id="dropdown-example" class="aside-submenu hidden py-2 space-y-2">
          { 
            Object.values(settings).map((setting:any) => (
              <li class="flex flex-col">
                <a href={'/admin/settings/'+setting.slug}>{setting?.name}</a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>



    <div class="nav-block">
      <button class="nav-block-label"> Collections</button>

      <div class="nav-block-items">
        {
          Object.values(Collections).map((collection:any, index:any) => (
            <a
              class={
                currentPath === `admin/${collection.slug}`
                  ? "active nav-block-item"
                  : "nav-block-item"
              }
              href={"/admin/" + collection.slug}
            >
              {collection.name}
            </a>
          ))
        }
      </div>
    </div>
  </nav>
</aside>

<style>

  .aside .site-logo {
    height: auto;
    width: 140px;
    max-height: 60px;
  }
  .aside {
    display: flex;
    flex-direction: column;
    max-width: var(--nav-width);
    min-width: var(--nav-width);
    width: 100%;
    border-right: 1px solid rgb(255 255 255 / 7%);
    background: black;
    opacity: 0;
    transition: opacity 0.4s ease;
    position: sticky;
    top: 0;
    height: 100vh;

    
  }

  .aside.aside-opened {
      opacity: 1;
  }

  .aside-header {
    padding: 24px 20px;
    border-bottom: 1px solid rgb(255 255 255 / 7%);
    color: #d3d4d5;
    display: flex;
    align-items: center;
    gap: 20px;
    position: sticky;
    top: 0;
    background: #000;
    min-height: 90px;
    height: 90px;
  }

  .aside-header-content {
    padding-left: 58px;
    font-weight: 600;
    width: 100%;
  }

  .nav {
    padding: 16px;
    flex: auto;
    display: flex;
    flex-direction: column;
    gap: 22px;
  }

  .nav-block {
    display: grid;
    gap: 6px;
  }

  .nav-block-label {
    display: flex;
    border: none;
    padding: 12px 0;
    justify-content: space-between;
    border-radius: 4px;
    background: none;
    color: #707070;
  }

  .nav-block-items {
    display: grid;
  }

  .nav-block-item {
    padding: 0.5rem 16px;
    color: #b0b0b0;
    text-decoration: none;
    border-left: 2px solid #151515;
    white-space: nowrap;
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;

    &.active {
      color: #9948ff;
      border-color: #924beb;
    }
  }

  .aside-submenu {
    padding-left: 8px
  }

  .aside-submenu li {
    color: #888;
  }

  .aside-submenu li a {
    padding: 4px 10px;
  }
</style>